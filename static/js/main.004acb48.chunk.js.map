{"version":3,"sources":["components/Controls/Checkbox/Checkbox.jsx","utils/functions.js","components/Controls/Dropdown/Dropdown.jsx","components/Controls/Button/ConnectedButton.jsx","components/Controls/TextField/Input.jsx","components/Form/Form.jsx","redux/actions.js","components/Main/Main.jsx","redux/store.js","redux/reducers.js","reportWebVitals.js","index.js"],"names":["Checkbox","label","id","onStateChange","dispatch","useDispatch","ref","useRef","htmlFor","className","type","name","onClick","_","current","checked","findBranch","where","what","arr","split","lastSuccessPath","i","Object","keys","length","j","slice","join","Dropdown","values","onItemChange","useState","placeholder","changePlaceholder","select","toggleList","e","target","children","classList","contains","closeList","openList","useEffect","window","addEventListener","removeEventListener","add","remove","chooseItem","getAttribute","map","v","data-value","letters","numbers","Array","k","Math","ceil","random","sort","generateId","connect","state","errors","check","text","isFluid","store","useStore","isValid","setValidity","getState","Input","onInputChange","selector","error","setError","onBlur","value","Form","onSubmit","preventDefault","registration","filter","console","log","SET_REGISTRATION_NAME","SET_REGISTRATION_EMAIL","SET_REGISTRATION_PHONE","SET_REGISTRATION_LANGUAGE","TOGGLE_REGISTRATION_CHECKBOX","setRegistrationName","payload","setRegistrationEmail","setRegistrationPhone","setRegistrationLanguage","toggleRegistrationCheckbox","Main","href","createStore","pattern","action","test","email","phone","language","checkbox","__REDUX_DEVTOOLS_EXTENSION__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAyCeA,MArCf,YAA+C,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,cACtBC,EAAWC,cACXC,EAAMC,mBAIZ,OACE,wBAAOC,QAASN,EAAhB,UACE,uBAAMO,UAAU,oBAAhB,UACE,uBACEC,KAAK,WACLC,KAAMT,EACNA,GAAIA,EACJO,UAAU,yCACVG,QAVa,SAAAC,GAAC,OAAIT,EAAUD,EAAcG,EAAIQ,QAAQC,WAWtDT,IAAKA,IAEP,sBAAMG,UAAU,gCAElB,sBAAMA,UAAU,oCAAhB,SAAqDR,Q,eCJpD,SAASe,EAAYC,EAAOC,GAIjC,IAHA,IAAMC,EAAMD,EAAKE,MAAM,KACnBC,EAAkBJ,EAEbK,EAAI,EAAGA,EAAIC,OAAOC,KAAKP,GAAOQ,OAAQH,GAAK,EAClD,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAIM,OAAQC,GAAK,EAAG,CACtC,GAAGH,OAAOC,KAAKP,GAAOK,KAAOH,EAAIO,GAC/B,OAAOV,EAAWK,EAAgBF,EAAIO,IAAKP,EAAIQ,MAAM,EAAGR,EAAIM,QAAQG,KAAK,MAEzE,MAIN,OAAOP,ECuCMQ,MAlEf,YAAuD,IAApC3B,EAAmC,EAAnCA,GAAI4B,EAA+B,EAA/BA,OAAQ7B,EAAuB,EAAvBA,MAAO8B,EAAgB,EAAhBA,aAAgB,EACTC,mBAASF,EAAO,IADP,mBAC5CG,EAD4C,KAC/BC,EAD+B,KAE9CC,EAAS5B,mBACTH,EAAWC,cAEX+B,EAAa,SAAAC,GACjB,OAAGA,EAAEC,SAAWH,EAAOrB,QAAQyB,SAAS,IAEnCJ,EAAOrB,QAAQyB,SAAS,GAAGC,UAAUC,SAAS,yBAFAC,IAGrCC,KAIhBC,qBAAU,WAIR,OAHAC,OAAOC,iBAAiB,QAASV,GACjChC,EAAU2B,EAAaE,IAEhB,WACLY,OAAOE,oBAAoB,QAASX,OAIxC,IAAMO,EAAW,SAAA9B,GACfsB,EAAOrB,QAAQyB,SAAS,GAAGC,UAAUQ,IAAI,+BACzCb,EAAOrB,QAAQyB,SAAS,GAAGC,UAAUQ,IAAI,0BAErCN,EAAY,SAAA7B,GAChBsB,EAAOrB,QAAQyB,SAAS,GAAGC,UAAUS,OAAO,+BAC5Cd,EAAOrB,QAAQyB,SAAS,GAAGC,UAAUS,OAAO,0BAGxCC,EAAa,SAAAb,GACjBH,EAAkBG,EAAEC,OAAOa,aAAa,gBAG1C,OACE,qCACA,mBAAG1C,UAAU,kCAAb,SAAgDR,GAAgB,yCAChE,sBAAKK,IAAK6B,EAAQjC,GAAIA,EAAIO,UAAU,SAApC,UACE,mBAAGA,UAAU,wCAAb,SAAuDwB,IACvD,oBAAIxB,UAAS,eAAb,SAEIqB,EAAOsB,KAAK,SAAAC,GACV,OACE,oBACEzC,QAAUsC,EACVzC,UAAU,oBAEV6C,aAAYD,EAJd,SAKEA,GDtDT,WACL,IAAME,EAAU,6BACVC,EAAU,aAchB,OAbe,YAAK,IAAIC,MAAM,KAAML,KAAK,SAACvC,EAAG6C,GAAJ,OAAUC,KAAKC,KAAKD,KAAKE,SAAWH,GAAK,EAAI,EAAI,KAAII,MAAM,SAAAjD,GAAC,MAAI,GAAM8C,KAAKE,YAElGT,KAAK,SAAC9B,EAAGoC,GAQzB,OALS,IAANpC,EACMiC,EAAQI,KAAKC,KAAKD,KAAKE,SAAWN,EAAQ9B,OAAS,IAEnD+B,EAAQG,KAAKC,KAAKD,KAAKE,SAAWL,EAAQ/B,OAAS,OAG3DG,KAAK,ICsCWmC,gBClBrB,IAEeC,eAFS,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAMC,UAEnCF,EAhCf,YAA6E,IAAlDE,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAA4B,IAAnB3D,YAAmB,MAAZ,SAAY,EACpE4D,EAAQC,cAD4D,EAE3CvC,oBAAS,GAFkC,mBAEnEwC,EAFmE,KAE1DC,EAF0D,KAe1E,OAXA7B,qBAAU,SAAA/B,GACR,IAAI,IAAIS,KAAK4C,EAAOC,GAClB,IAA0C,IAAtCG,EAAMI,WAAWR,OAAOC,GAAO7C,GAEjC,YADAmD,GAAY,GAKhBA,GAAY,MAIZ,wBACE/D,KAAMA,EACND,UAAS,yBAAoB+D,EAAU,OAAS,WAAvC,YAAqDH,EAAU,gBAAkB,MAF5F,SAGED,OCiBSO,MAnCf,YAA2E,IAA1D1E,EAAyD,EAAzDA,MAAOS,EAAkD,EAAlDA,KAAMR,EAA4C,EAA5CA,GAAI+B,EAAwC,EAAxCA,YAAa2C,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SACtDzE,EAAWC,cACXC,EAAMC,mBACN+D,EAAQC,cAH0D,EAI9CvC,mBAAShB,EAAWsD,EAAMI,WAAYG,GAAUC,OAJF,mBAIjEA,EAJiE,KAI1DC,EAJ0D,KAWxE,OACE,wBAAOvE,QAASN,EAAhB,UACE,mBAAGO,UAAU,kCAAb,SAAgDR,IAChD,uBACES,KAAMA,EACNC,KAAMT,EACNA,GAAIA,EACJ+B,YAAaA,EACbxB,UAAU,oBACVuE,OAda,SAAAnE,GACjBT,EAAUwE,EAActE,EAAIQ,QAAQmE,QACpCF,EAAS/D,EAAWsD,EAAMI,WAAYG,GAAUC,QAa5CxE,IAAKA,IAEP,mBAAGG,UAAU,gCAAb,SAA8CqE,QCArCI,MAzBf,YAA2B,IAAZ3C,EAAW,EAAXA,SACP+B,EAAQC,cACRjE,EAAMC,mBAaZ,OACE,sBACEE,UAAU,0BACV0E,SAdiB,SAAA9C,GAInB,OAHAA,EAAE+C,iBAEU7D,OAAOO,OAAOwC,EAAMI,WAAWR,OAAOmB,cAAcC,QAAQ,SAAAhE,GAAC,OAAU,IAANA,GAAoB,OAANA,KAAYG,OAAS,GAG9G8D,QAAQC,IAAIlB,EAAMI,WAAWW,eAFd,GAWf/E,IAAKA,EAHP,SAIEiC,KCvBOkD,EAA+B,WAC/BC,EAA+B,YAC/BC,EAA+B,YAC/BC,EAA+B,eAC/BC,EAA+B,kBAE/BC,EAA6B,SAAAC,GAAO,MAAK,CAAErF,KAAM+E,EAAuBM,YACxEC,EAA6B,SAAAD,GAAO,MAAK,CAAErF,KAAMgF,EAAwBK,YACzEE,EAA6B,SAAAF,GAAO,MAAK,CAAErF,KAAMiF,EAAwBI,YACzEG,EAA6B,SAAAH,GAAO,MAAK,CAAErF,KAAMkF,EAA2BG,YAC5EI,EAA6B,SAAAJ,GAAO,MAAK,CAAErF,KAAMmF,EAA8BE,YCF7E,SAASK,IACtB,OACE,sBAAM3F,UAAU,0BAAhB,SACE,eAAC,EAAD,WACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,kDAAd,gFACA,oBAAGA,UAAU,oDAAb,qGACoB,mBAAG4F,KAAK,IAAI5F,UAAU,aAAtB,kDAItB,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CACEP,GAAG,YACHD,MAAM,qBACNgC,YAAY,yFACZvB,KAAK,OACLmE,SAAQ,oBACRD,cAAgBkB,MAIpB,qBAAKrF,UAAU,YAAf,SACE,cAAC,EAAD,CACEP,GAAG,YACHD,MAAM,QACNgC,YAAY,sEACZvB,KAAK,QACLmE,SAAQ,qBACRD,cAAgBoB,MAIpB,qBAAKvF,UAAU,YAAf,SACE,cAAC,EAAD,CACEP,GAAG,aACHD,MAAM,kFACNgC,YAAY,qGACZvB,KAAK,OACLmE,SAAQ,qBACRD,cAAgBqB,MAIpB,qBAAKxF,UAAU,YAAf,SACE,cAAC,EAAD,CACEP,GAAG,iBACH4B,OAAQ,CAAC,6CAAW,+DAAc,yDAAa,0DAC/C7B,MAAM,2BACN8B,aAAemE,MAInB,qBAAKzF,UAAU,YAAf,SACE,cAAC,EAAD,CACEP,GAAG,iBACHD,MAAQ,yFAAW,mBAAGoG,KAAK,IAAI5F,UAAU,aAAtB,wDAAX,mEACRN,cAAegG,MAInB,qBAAK1F,UAAU,YAAf,SACE,cAAC,EAAD,CACE2D,KAAK,+GACL1D,KAAK,SACLyD,MAAM,eACNE,SAAO,W,kBCnCNC,EAAQgC,aCrCM,SAAErC,EAAF,GAA+B,IAArBvD,EAAoB,EAApBA,KAAMqF,EAAc,EAAdA,QACrCQ,EAAU,KAEd,OAAO7F,GACL,KAAK8F,EAGH,OAFAD,EAAU,4DAEK,KAAZR,EACM,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEV1E,KAAM,CAAEsE,MAAO,KAAMH,MAAO,iIAE9BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEV1E,MAAM,QAKR4F,EAAQE,KAAKV,GAiBV,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEV1E,KAAM,CAAEsE,MAAOc,EAASjB,OAAO,KAEjCZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEV1E,MAAM,QA1BH,2BACFsD,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEV1E,KAAM,CAAEsE,MAAO,KAAMH,MAAO,oKAE9BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEV1E,MAAM,QAsBlB,KAAK6F,EAGH,OAFAD,EAAU,wIAEK,KAAZR,EACM,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVqB,MAAO,CAAEzB,MAAO,KAAMH,MAAO,6IAE/BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVqB,OAAO,QAKTH,EAAQE,KAAKV,GAiBV,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVqB,MAAO,CAAEzB,MAAOc,EAASjB,OAAO,KAElCZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVqB,OAAO,QA1BJ,2BACFzC,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVqB,MAAO,CAAEzB,MAAO,KAAMH,MAAO,oKAE/BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVqB,OAAO,QAsBnB,KAAKF,EAGH,OAFAD,EAAU,yEAEK,KAAZR,EACM,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVsB,MAAO,CAAE1B,MAAO,KAAMH,MAAO,yJAE/BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVsB,OAAO,QAKTJ,EAAQE,KAAKV,GAiBV,2BACF9B,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVsB,MAAO,CAAE1B,MAAOc,EAASjB,OAAO,KAElCZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVsB,OAAO,QA1BJ,2BACF1C,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVsB,MAAO,CAAE1B,MAAO,KAAMH,MAAO,oKAE/BZ,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVsB,OAAO,QAsBnB,KAAKH,EACH,OAAO,2BACFvC,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVuB,SAAUb,MAIhB,KAAKS,EACH,OAAO,2BACFvC,GADL,IAEEoB,aAAa,2BACRpB,EAAMoB,cADC,IAEVwB,SAAUd,IAEV7B,OAAO,2BACFD,EAAMC,QADL,IAEJmB,aAAa,2BACRpB,EAAMC,OAAOmB,cADN,IAEVwB,UAAWd,QAKrB,QAAS,OAAO,eAAM9B,MDxLL,CACnBoB,aAAc,CACZ1E,KAAM,CACJsE,MAAO,KACPH,MAAO,MAET4B,MAAO,CACLzB,MAAO,KACPH,MAAO,MAET6B,MAAO,CACL1B,MAAO,KACPH,MAAO,MAET+B,SAAU,CACR5B,OAAO,EACPH,MAAO,MAMT8B,SAAU,MAGZ1C,OAAQ,CACNmB,aAAc,CACZ1E,KAAM,KACN+F,MAAO,KACPC,MAAO,KACPE,SAAU,QASdhE,OAAOiE,8BAAgCjE,OAAOiE,gCE9BjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpD,MAAOA,EAAjB,SACE,cAAC8B,EAAD,QAGJuB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.004acb48.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux';\n\nfunction Checkbox({label, id, onStateChange}) {\n  const dispatch = useDispatch();\n  const ref = useRef();\n\n  const handleChange = _ => dispatch( onStateChange(ref.current.checked) );\n\n  return (\n    <label htmlFor={id}>\n      <span className=\"checkbox__wrapper\">\n        <input \n          type=\"checkbox\" \n          name={id} \n          id={id}\n          className='checkbox checkbox--true form__checkbox'\n          onClick={ handleChange }\n          ref={ref}\n        />\n        <span className=\"checkbox checkbox--fake \"></span>\n      </span>\n      <span className=\"text text--regular checkbox__text\">{label}</span>\n    </label>\n  )\n}\n\n\nCheckbox.propTypes = {\n  label: PropTypes.oneOfType(\n    [ \n      PropTypes.string, \n      PropTypes.element \n    ]\n  ),\n  id: PropTypes.oneOfType(\n    [ PropTypes.string, PropTypes.number ]\n  ).isRequired,\n}\n\nexport default Checkbox\n\n","export function generateId() {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const scheme = [ ...new Array(10) ].map( (_, k) => Math.ceil(Math.random() * k) > 1 ? 0 : 1 ).sort( _ => 0.5 - Math.random());\n  \n  const id = scheme.map( (i, k) => {\n    var char = '';\n    \n    if(i === 1) \n      char = letters[Math.ceil(Math.random() * letters.length - 1)];\n    else\n      char = numbers[Math.ceil(Math.random() * numbers.length - 1)];\n\n    return char\n  }).join('');\n\n  return id;\n}\n\nexport function findBranch( where, what ) {\n  const arr = what.split('.');\n  let lastSuccessPath = where;\n  \n  for( let i = 0; i < Object.keys(where).length; i += 1) {\n    for( let j = 0; j < arr.length; j += 1) {\n      if(Object.keys(where)[i] === arr[j]) \n        return findBranch(lastSuccessPath[arr[j]], arr.slice(1, arr.length).join('.'))\n      else \n        break;\n    }\n  }\n\n  return lastSuccessPath\n}","import React, { useRef, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { generateId } from '../../../utils/functions'\nimport { useDispatch } from 'react-redux';\n\nfunction Dropdown({id, values, label, onItemChange }) {\n  const [ placeholder, changePlaceholder ] = useState(values[0]);\n  const select = useRef();\n  const dispatch = useDispatch();\n  \n  const toggleList = e => {\n    if(e.target !== select.current.children[0]) return closeList();\n    else {\n      if(select.current.children[1].classList.contains('select__list--visible')) return closeList()  \n      else return openList()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', toggleList);\n    dispatch( onItemChange(placeholder) );\n    \n    return () => {\n      window.removeEventListener('click', toggleList);\n    }\n  })\n  \n  const openList = _ => {\n    select.current.children[0].classList.add('select__placeholder--opened');\n    select.current.children[1].classList.add('select__list--visible');\n  };\n  const closeList = _ => {\n    select.current.children[0].classList.remove('select__placeholder--opened');\n    select.current.children[1].classList.remove('select__list--visible');\n  };\n  \n  const chooseItem = e => {\n    changePlaceholder(e.target.getAttribute('data-value'));\n  } \n\n  return (\n    <>\n    <p className=\"text text--regular input__label\">{label ? label : 'Список'}</p>\n    <div ref={select} id={id} className=\"select\">\n      <p className=\"input form__input select__placeholder\">{ placeholder }</p>\n      <ul className={`select__list`}>\n        { \n          values.map( v => {\n            return(\n              <li \n                onClick={ chooseItem }\n                className=\"select__list-item\" \n                key={generateId()} \n                data-value={v}\n              >{v}</li>\n            )\n          })\n        }\n      </ul>\n    </div>\n    </>\n  )\n}\n\nDropdown.propTypes = {\n  id           : PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]).isRequired,\n  values       : PropTypes.array.isRequired,\n  label        : PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  onItemChange : PropTypes.func.isRequired\n}\n\nexport default Dropdown;","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect, useStore } from 'react-redux';\n\nfunction ConnectedButton({ errors, check, text, isFluid, type = 'button' }) {\n  const store = useStore();\n  const [isValid, setValidity] = useState(false);\n  \n  useEffect(_ => {\n    for(let i in errors[check]) {\n      if( store.getState().errors[check][i] !== false ) {\n        setValidity(false);\n        return;\n      }\n    }\n\n    setValidity(true);\n  });\n\n  return(\n    <button \n      type={type} \n      className={`button button--${isValid ? 'blue' : 'disabled'} ${isFluid ? 'button--fluid' : null}`}\n    >{text}\n    </button>\n  )\n}\n\nConnectedButton.propTypes = {\n  isFluid : PropTypes.bool,\n  text    : PropTypes.string.isRequired,\n  type    : PropTypes.string\n}\n\nconst mapStateToProps = state => ({ errors: state.errors });\n\nexport default connect(mapStateToProps)(ConnectedButton);\n\n","import React, { useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useStore } from 'react-redux';\nimport { findBranch } from '../../../utils/functions';\n\nfunction Input({ label, type, id, placeholder, onInputChange, selector }) {  \n  const dispatch = useDispatch();\n  const ref = useRef();\n  const store = useStore();\n  const [error, setError] = useState(findBranch(store.getState(), selector).error);\n  \n  const handleBlur = _ => {\n    dispatch( onInputChange(ref.current.value) );\n    setError(findBranch(store.getState(), selector).error)\n  }\n\n  return (\n    <label htmlFor={id}>\n      <p className=\"text text--regular input__label\">{label}</p>\n      <input \n        type={type} \n        name={id} \n        id={id}\n        placeholder={placeholder}\n        className='input form__input'\n        onBlur={handleBlur}\n        ref={ref}\n      />\n      <p className=\"text text--error input__error\">{error}</p>\n    </label>\n  )\n}\n\nInput.propTypes = {\n  selector      : PropTypes.string.isRequired,\n  onInputChange : PropTypes.func.isRequired,\n  label         : PropTypes.string,\n  id            : PropTypes.oneOfType( [ PropTypes.string, PropTypes.number ]).isRequired,\n}\n\nexport default Input\n\n","import React, { useRef } from 'react'\nimport { useStore } from 'react-redux';\n\nfunction Form({children}) {\n  const store = useStore();\n  const ref = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let error = Object.values(store.getState().errors.registration).filter( i => i === true || i === null).length > 0; \n    if(error) return false;\n    else {\n      console.log(store.getState().registration);\n      return false;\n    }\n  }\n\n  return (\n    <form \n      className=\"form form--registration\" \n      onSubmit={ handleSubmit }\n      ref={ref}\n    >{children}\n    </form>\n  )\n}\n\nexport default Form\n\n","export const SET_REGISTRATION_NAME        = 'SET_NAME';\nexport const SET_REGISTRATION_EMAIL       = 'SET_EMAIL';\nexport const SET_REGISTRATION_PHONE       = 'SET_PHONE';\nexport const SET_REGISTRATION_LANGUAGE    = 'SET_LANGUAGE';\nexport const TOGGLE_REGISTRATION_CHECKBOX = 'TOGGLE_CHECKBOX';\n\nexport const setRegistrationName        = payload => ({ type: SET_REGISTRATION_NAME, payload });\nexport const setRegistrationEmail       = payload => ({ type: SET_REGISTRATION_EMAIL, payload });\nexport const setRegistrationPhone       = payload => ({ type: SET_REGISTRATION_PHONE, payload });\nexport const setRegistrationLanguage    = payload => ({ type: SET_REGISTRATION_LANGUAGE, payload }); \nexport const toggleRegistrationCheckbox = payload => ({ type: TOGGLE_REGISTRATION_CHECKBOX, payload }); ","import React from 'react'\nimport Checkbox from '../Controls/Checkbox/Checkbox'\nimport Dropdown from '../Controls/Dropdown/Dropdown'\nimport ConnectedButton from '../Controls/Button/ConnectedButton'\nimport Input from '../Controls/TextField/Input'\nimport Form from '../Form/Form'\nimport { setRegistrationEmail, setRegistrationLanguage, setRegistrationName, setRegistrationPhone, toggleRegistrationCheckbox } from '../../redux/actions'\n\nexport default function Main() {\n  return (\n    <main className=\"main main--registration\">\n      <Form>\n        <div className=\"form__row--header\">\n          <h1 className=\"text text--header form__text form__text--header\">Регистрация</h1>\n          <p className=\"text text--regular form__text form__text--regular\">\n            Уже есть аккаунт? <a href=\"/\" className=\"text--link\">Войти</a>\n          </p>\n        </div>\n\n        <div className=\"form__row\">\n          <Input \n            id=\"form-name\" \n            label=\"Имя\" \n            placeholder=\"Введите Ваше имя\" \n            type=\"text\"\n            selector={`registration.name`}\n            onInputChange={ setRegistrationName }\n          />\n        </div>\n\n        <div className=\"form__row\">\n          <Input \n            id=\"form-mail\" \n            label=\"Email\" \n            placeholder=\"Введите Ваш email\" \n            type=\"email\"\n            selector={`registration.email`}\n            onInputChange={ setRegistrationEmail }\n          />\n        </div>\n\n        <div className=\"form__row\">\n          <Input \n            id=\"form-phone\" \n            label=\"Номер телефона\" \n            placeholder=\"Ваш номер телефона\" \n            type=\"text\"\n            selector={`registration.phone`}\n            onInputChange={ setRegistrationPhone }\n          /> \n        </div>\n\n        <div className=\"form__row\">\n          <Dropdown \n            id=\"form-languages\" \n            values={['Русский', 'Английский', 'Китайский', 'Испанский']} \n            label='Язык'\n            onItemChange={ setRegistrationLanguage }\n          />\n        </div>\n\n        <div className=\"form__row\">\n          <Checkbox \n            id=\"form-agreement\" \n            label={ <>Принимаю <a href=\"/\" className=\"text--link\">условия</a> соглашения</> }\n            onStateChange={toggleRegistrationCheckbox}\n          />\n        </div>\n\n        <div className=\"form__row\">\n          <ConnectedButton \n            text=\"Зарегистрироваться\"\n            type=\"submit\"\n            check='registration'\n            isFluid\n          />\n        </div>\n      </Form>\n    </main>\n  )\n}\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nconst initialState = {\n  registration: {\n    name: {\n      value: null,\n      error: null\n    },\n    email: {\n      value: null,\n      error: null\n    },\n    phone: {\n      value: null,\n      error: null\n    },\n    checkbox: {\n      value: false,\n      error: null\n    },\n    // language: {\n    //   value: false,\n    //   error: null\n    // },  \n    language: null\n  },\n\n  errors: {\n    registration: {\n      name: null,\n      email: null,\n      phone: null,\n      checkbox: null,\n      // language: null\n    }\n  }\n}\n\nexport const store = createStore(\n  rootReducer, \n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import * as action from './actions';\n\nexport const rootReducer = ( state, {type, payload} ) => {\n  let pattern = null;\n\n  switch(type) {\n    case action.SET_REGISTRATION_NAME:\n      pattern = /^[ a-zA-Zа-яА-ЯЁё-’]+$/;\n\n      if(payload === '') {\n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            name: { value: null, error: 'Пожалуйста, введите имя' }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              name: true\n            }\n          }\n        } \n      } else {\n        if(!pattern.test(payload)) {\n          return {\n            ...state,\n            registration: {\n              ...state.registration,\n              name: { value: null, error: 'Введено некорретное значение' }\n            },\n            errors: {\n              ...state.errors,\n              registration: {\n                ...state.errors.registration,\n                name: true\n              }\n            }\n          }\n        } \n        \n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            name: { value: payload, error: false }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              name: false\n            }\n          }\n        }\n      }\n\n    case action.SET_REGISTRATION_EMAIL:\n      pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$/;\n\n      if(payload === '') {\n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            email: { value: null, error: 'Пожалуйста, введите почту' }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              email: true\n            }\n          }\n        } \n      } else {\n        if(!pattern.test(payload)) {\n          return {\n            ...state,\n            registration: {\n              ...state.registration,\n              email: { value: null, error: 'Введено некорретное значение' }\n            },\n            errors: {\n              ...state.errors,\n              registration: {\n                ...state.errors.registration,\n                email: true\n              }\n            }\n          }\n        } \n        \n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            email: { value: payload, error: false }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              email: false\n            }\n          }\n        }\n      }\n    \n    case action.SET_REGISTRATION_PHONE:\n      pattern = /^[+]?\\d[(]?\\d{3}[)]?(\\d{3}[-]?\\d{2}[-]?\\d{2}|\\d{2}[-]?\\d{2}[-]?\\d{3})$/;\n\n      if(payload === '') {\n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            phone: { value: null, error: 'Пожалуйста, введите телефон' }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              phone: true\n            }\n          }\n        } \n      } else {\n        if(!pattern.test(payload)) {\n          return {\n            ...state,\n            registration: {\n              ...state.registration,\n              phone: { value: null, error: 'Введено некорретное значение' }\n            },\n            errors: {\n              ...state.errors,\n              registration: {\n                ...state.errors.registration,\n                phone: true\n              }\n            }\n          }\n        } \n        \n        return {\n          ...state,\n          registration: {\n            ...state.registration,\n            phone: { value: payload, error: false }\n          },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              phone: false\n            }\n          }\n        }\n      }\n\n    case action.SET_REGISTRATION_LANGUAGE:\n      return {\n        ...state,\n        registration: {\n          ...state.registration,\n          language: payload\n        },\n      }  \n\n    case action.TOGGLE_REGISTRATION_CHECKBOX:\n      return {\n        ...state,\n        registration: {\n          ...state.registration,\n          checkbox: payload\n        },\n          errors: {\n            ...state.errors,\n            registration: {\n              ...state.errors.registration,\n              checkbox: !payload\n            }\n          }\n      }    \n\n    default: return  { ...state }\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Main from './components/Main/Main';\nimport { store } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nimport './scss/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}